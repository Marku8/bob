AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation template to create two EKS clusters (one public, one private) with communication between them'

Parameters:
  VPCName:
    Description: 'Name of the VPC'
    Type: String
    Default: 'MainVPC'
  VPCCIDR:
    Description: 'CIDR block for the VPC'
    Type: String
    Default: '10.0.0.0/16'
  PublicSubnetCIDR:
    Description: 'CIDR block for the public subnet'
    Type: String
    Default: '10.0.1.0/24'
  PrivateSubnetCIDR:
    Description: 'CIDR block for the private subnet'
    Type: String
    Default: '10.0.2.0/24'
  KeyName:
    Description: 'Name of an existing EC2 KeyPair to enable SSH access to the instances'
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: 'Can contain only ASCII characters.'
  ClusterVersion:
    Description: 'EKS Cluster version'
    Type: String
    Default: '1.21'
  InstanceType:
    Description: 'EC2 instance type for the worker nodes'
    Type: String
    Default: 't3.medium'

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCIDR
      Tags:
        - Key: Name
          Value: !Ref VPCName

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: InternetGateway

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCIDR
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs !Ref AWS::Region]
      Tags:
        - Key: Name
          Value: PublicSubnet

  PrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCIDR
      AvailabilityZone: !Select [0, !GetAZs !Ref AWS::Region]
      Tags:
        - Key: Name
          Value: PrivateSubnet

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  ElasticIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc

  NATGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt ElasticIP.AllocationId
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: NATGateway

  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTable

  PrivateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NATGateway

  PrivateSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  PublicEKSCluster:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: 'public-eks-cluster'
      Version: !Ref ClusterVersion
      RoleArn: !GetAtt EKSClusterRole.Arn
      ResourcesVpcConfig:
        SubnetIds:
          - !Ref PublicSubnet
        SecurityGroupIds:
          - !GetAtt PublicClusterSecurityGroup.GroupId

  PrivateEKSCluster:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: 'private-eks-cluster'
      Version: !Ref ClusterVersion
      RoleArn: !GetAtt EKSClusterRole.Arn
      ResourcesVpcConfig:
        SubnetIds:
          - !Ref PrivateSubnet
        SecurityGroupIds:
          - !GetAtt PrivateClusterSecurityGroup.GroupId

  EKSClusterRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: 'eks-cluster-policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'ec2:Describe*'
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:BatchGetImage'
                  - 'ecr:GetAuthorizationToken'
                  - 'autoscaling:DescribeAutoScalingGroups'
                  - 'autoscaling:DescribeAutoScalingInstances'
                  - 'autoscaling:DescribeLaunchConfigurations'
                  - 'autoscaling:DescribeTags'
                Resource: '*'

  PublicClusterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Public cluster security group'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: !Ref PrivateSubnetCIDR

  PrivateClusterSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Private cluster security group'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: !Ref PublicSubnetCIDR

Outputs:
  VPCId:
    Description: 'VPC Id'
    Value: !Ref VPC
  PublicSubnetId:
    Description: 'Public Subnet Id'
    Value: !Ref PublicSubnet
  PrivateSubnetId:
    Description: 'Private Subnet Id'
    Value: !Ref PrivateSubnet
  EKSClusterRoleARN:
    Description: 'EKS Cluster Role ARN'
    Value: !GetAtt EKSClusterRole.Arn
  PublicEKSClusterName:
    Description: 'Public EKS Cluster Name'
    Value: !Ref PublicEKSCluster
  PrivateEKSClusterName:
    Description: 'Private EKS Cluster Name'
    Value: !Ref PrivateEKSCluster
